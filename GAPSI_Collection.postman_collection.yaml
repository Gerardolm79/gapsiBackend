openapi: 3.0.3
info:
  title: Swagger GAPSI 
  description: GAPSI Backend REST Services
  version: 0.0.1-SNAPSHOT
servers:
  - url: http://localhost:8080/
tags:
  - name: GAPSI
    description: Everything about IT Solutions
    externalDocs:
      description: Find out more
      url: https://www.gapsi.com.mx/
paths:
  /welcome/{candidate}:
    get:
      tags:
        - welcome
      summary: Retrieve Welcome Message
      description: Retrieve the welcome message for the candidate and the app version
      operationId: welcome
      parameters:
      - name: candidate
        in: path
        description: The name of candidate
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Welcome'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Welcome'
  /provider/list/{page}:
    get:
      tags:
        - provider
      summary: list of providers 
      description: Indicates the page required
      operationId: listByPage
      parameters:
        - name: page
          in: path
          description: the number of the page required 
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
  /provider/save:
    post:
      tags:
        - provider
      summary: Create a new provider
      description: Verify that provider does not already exist 
      operationId: saveProvider
      requestBody:
        description: Created provider object, the id is generated by the backend when is registered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
      responses:
        default:
          description: Register a new provider or get the id if it already exists 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'  
                
  /provider/delete/{id}: 
    delete:
      tags:
        - provider
      summary: Logic delete a provider by id
      description: logic delete of a provider
      operationId: deleteProvider
      parameters:
        - name: id
          in: path
          description: Provider id to delete
          required: true
          schema:
            type: number
      responses:
        default:
          description: successful operation
          content:
            application/text:
              schema:
                example: Provider deleted

  /provider/deleteByName/{name}: 
    delete:
      tags:
        - provider
      summary: Logic elete a provider by name
      description: logic delete of a provider
      operationId: deleteProviderByName
      parameters:
        - name: name
          in: path
          description: Provider's name to delete
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
          content:
            application/text:
              schema:
                example: Provider deleted
components:
  schemas:
    ProviderRequest:
      type: object
      properties:
        commercialName: 
          type: string
          example: Pichincha Ec
        businessName:
          type: string
          example: Pichincha Ecuador
        address:
          type: string
          example: Bogotá Colombia
    Provider:
      type: object
      properties:
        id:
          type: integer
          example: 1001
        commercialName: 
          type: string
          example: Pichincha Ec
        businessName:
          type: string
          example: Pichincha Ecuador
        address:
          type: string
          example: Bogotá Colombia
    Welcome:
      type: object
      properties:
        msg:
          type: string
          example: Welcome Gerardo
        version:
          type: string
          example: 1.0 draft